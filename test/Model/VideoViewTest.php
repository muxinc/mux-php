<?php
/**
 * VideoViewTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  MuxPhp
 * @author   Mux API team
 * @link     https://docs.mux.com
 */

/**
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace MuxPhp\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * VideoViewTest Class Doc Comment
 *
 * @category    Class
 * @description VideoView
 * @package     MuxPhp
 * @author      Mux API team
 * @link        https://openapi-generator.tech
 */
class VideoViewTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "VideoView"
     */
    public function testVideoView()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_total_upscaling"
     */
    public function testPropertyViewTotalUpscaling()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "preroll_ad_asset_hostname"
     */
    public function testPropertyPrerollAdAssetHostname()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_source_domain"
     */
    public function testPropertyPlayerSourceDomain()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "region"
     */
    public function testPropertyRegion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "viewer_user_agent"
     */
    public function testPropertyViewerUserAgent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "preroll_requested"
     */
    public function testPropertyPrerollRequested()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "page_type"
     */
    public function testPropertyPageType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "startup_score"
     */
    public function testPropertyStartupScore()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_seek_duration"
     */
    public function testPropertyViewSeekDuration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "country_name"
     */
    public function testPropertyCountryName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_source_height"
     */
    public function testPropertyPlayerSourceHeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "longitude"
     */
    public function testPropertyLongitude()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buffering_count"
     */
    public function testPropertyBufferingCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_duration"
     */
    public function testPropertyVideoDuration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_source_type"
     */
    public function testPropertyPlayerSourceType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "city"
     */
    public function testPropertyCity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_id"
     */
    public function testPropertyViewId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "platform_description"
     */
    public function testPropertyPlatformDescription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_startup_preroll_request_time"
     */
    public function testPropertyVideoStartupPrerollRequestTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "viewer_device_name"
     */
    public function testPropertyViewerDeviceName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_series"
     */
    public function testPropertyVideoSeries()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "viewer_application_name"
     */
    public function testPropertyViewerApplicationName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "updated_at"
     */
    public function testPropertyUpdatedAt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_total_content_playback_time"
     */
    public function testPropertyViewTotalContentPlaybackTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cdn"
     */
    public function testPropertyCdn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_instance_id"
     */
    public function testPropertyPlayerInstanceId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_language"
     */
    public function testPropertyVideoLanguage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_source_width"
     */
    public function testPropertyPlayerSourceWidth()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_error_message"
     */
    public function testPropertyPlayerErrorMessage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_mux_plugin_version"
     */
    public function testPropertyPlayerMuxPluginVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "watched"
     */
    public function testPropertyWatched()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "playback_score"
     */
    public function testPropertyPlaybackScore()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "page_url"
     */
    public function testPropertyPageUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "metro"
     */
    public function testPropertyMetro()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_max_request_latency"
     */
    public function testPropertyViewMaxRequestLatency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requests_for_first_preroll"
     */
    public function testPropertyRequestsForFirstPreroll()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_total_downscaling"
     */
    public function testPropertyViewTotalDownscaling()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "latitude"
     */
    public function testPropertyLatitude()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_source_host_name"
     */
    public function testPropertyPlayerSourceHostName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inserted_at"
     */
    public function testPropertyInsertedAt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_end"
     */
    public function testPropertyViewEnd()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mux_embed_version"
     */
    public function testPropertyMuxEmbedVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_language"
     */
    public function testPropertyPlayerLanguage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "page_load_time"
     */
    public function testPropertyPageLoadTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "viewer_device_category"
     */
    public function testPropertyViewerDeviceCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_startup_preroll_load_time"
     */
    public function testPropertyVideoStartupPrerollLoadTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_version"
     */
    public function testPropertyPlayerVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "watch_time"
     */
    public function testPropertyWatchTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_source_stream_type"
     */
    public function testPropertyPlayerSourceStreamType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "preroll_ad_tag_hostname"
     */
    public function testPropertyPrerollAdTagHostname()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "viewer_device_manufacturer"
     */
    public function testPropertyViewerDeviceManufacturer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rebuffering_score"
     */
    public function testPropertyRebufferingScore()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "experiment_name"
     */
    public function testPropertyExperimentName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "viewer_os_version"
     */
    public function testPropertyViewerOsVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_preload"
     */
    public function testPropertyPlayerPreload()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buffering_duration"
     */
    public function testPropertyBufferingDuration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_view_count"
     */
    public function testPropertyPlayerViewCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_software"
     */
    public function testPropertyPlayerSoftware()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_load_time"
     */
    public function testPropertyPlayerLoadTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "platform_summary"
     */
    public function testPropertyPlatformSummary()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_encoding_variant"
     */
    public function testPropertyVideoEncodingVariant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_width"
     */
    public function testPropertyPlayerWidth()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_seek_count"
     */
    public function testPropertyViewSeekCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "viewer_experience_score"
     */
    public function testPropertyViewerExperienceScore()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_error_id"
     */
    public function testPropertyViewErrorId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_variant_name"
     */
    public function testPropertyVideoVariantName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "preroll_played"
     */
    public function testPropertyPrerollPlayed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "viewer_application_engine"
     */
    public function testPropertyViewerApplicationEngine()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "viewer_os_architecture"
     */
    public function testPropertyViewerOsArchitecture()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_error_code"
     */
    public function testPropertyPlayerErrorCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buffering_rate"
     */
    public function testPropertyBufferingRate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "events"
     */
    public function testPropertyEvents()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_name"
     */
    public function testPropertyPlayerName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_start"
     */
    public function testPropertyViewStart()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_average_request_throughput"
     */
    public function testPropertyViewAverageRequestThroughput()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_producer"
     */
    public function testPropertyVideoProducer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "error_type_id"
     */
    public function testPropertyErrorTypeId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mux_viewer_id"
     */
    public function testPropertyMuxViewerId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_id"
     */
    public function testPropertyVideoId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "continent_code"
     */
    public function testPropertyContinentCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "session_id"
     */
    public function testPropertySessionId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "exit_before_video_start"
     */
    public function testPropertyExitBeforeVideoStart()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_content_type"
     */
    public function testPropertyVideoContentType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "viewer_os_family"
     */
    public function testPropertyViewerOsFamily()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_poster"
     */
    public function testPropertyPlayerPoster()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_average_request_latency"
     */
    public function testPropertyViewAverageRequestLatency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_variant_id"
     */
    public function testPropertyVideoVariantId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_source_duration"
     */
    public function testPropertyPlayerSourceDuration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_source_url"
     */
    public function testPropertyPlayerSourceUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mux_api_version"
     */
    public function testPropertyMuxApiVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_title"
     */
    public function testPropertyVideoTitle()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "short_time"
     */
    public function testPropertyShortTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rebuffer_percentage"
     */
    public function testPropertyRebufferPercentage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "time_to_first_frame"
     */
    public function testPropertyTimeToFirstFrame()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "viewer_user_id"
     */
    public function testPropertyViewerUserId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_stream_type"
     */
    public function testPropertyVideoStreamType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_startup_time"
     */
    public function testPropertyPlayerStartupTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "viewer_application_version"
     */
    public function testPropertyViewerApplicationVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_max_downscale_percentage"
     */
    public function testPropertyViewMaxDownscalePercentage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "view_max_upscale_percentage"
     */
    public function testPropertyViewMaxUpscalePercentage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "country_code"
     */
    public function testPropertyCountryCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "used_fullscreen"
     */
    public function testPropertyUsedFullscreen()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "isp"
     */
    public function testPropertyIsp()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "property_id"
     */
    public function testPropertyPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_autoplay"
     */
    public function testPropertyPlayerAutoplay()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_height"
     */
    public function testPropertyPlayerHeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "asn"
     */
    public function testPropertyAsn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "asn_name"
     */
    public function testPropertyAsnName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quality_score"
     */
    public function testPropertyQualityScore()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_software_version"
     */
    public function testPropertyPlayerSoftwareVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "player_mux_plugin_name"
     */
    public function testPropertyPlayerMuxPluginName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
